 #Live Server
was.version = so_Live
#Test server
#was.version = so_Test
#Local Server
#was.version = so_Local

was.commit = so_commit

twilio.sid = ACb6e831bbe76957b10919d82a43323385
#twilio.sid = AC017ace83083adea80385fa5ae8b85032
twilio.token = 3e186c972fd120277d86c46de2e1b585
#twilio.token = 26bcf3d479e3e7d31a53623049f0a9cf

twilio.from = +19844648472
#twilio.from = +18643622874

#Messaging server FCM or RabbitMQ
#possible values are "fcm" or "rmq"

#spring.jackson.serialization.fail-on-empty-beans=false
was.messageServer = fcm

#spring.thymeleaf.cache: false
#spring.data.rest.base-path=/api



#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/smarty_new
#=======

#
#spring.datasource.url=jdbc:mysql://ca1.risknucleus.com/smarty_google?useUnicode=yes&characterEncoding=UTF-8&useSSL=false&&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username=bm
#spring.datasource.password=benchmatrix786?
#>>>>>>> branch 'master' of http://ca1.risknucleus.com/grocery-store-mobile-app/java-api.git
#spring.datasource.url=jdbc:sqlserver://ca1.risknucleus.com:1431;databaseName=smarty;useUnicode=true;characterEncoding=UTF-8
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false


#spring.datasource.url=jdbc:mysql://google/smarty_new?cloudSqlInstance=smarty-252407:europe-west1:smarty-sql&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=benchmatrix786?&useSSL=false
#spring.datasource.url=jdbc:sqlserver://ca1.risknucleus.com:3306;databaseName=smarty_pos;useUnicode=true;characterEncoding=UTF-8
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false



spring.freemarker.checkTemplateLocation=false
#spring.datasource.username=sa
#spring.datasource.password=bmdev@786!!

#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.use-new-id-generator-mappings=false
#spring.datasource.url=jdbc:mysql://130.211.48.62/smarty_new?cloudSqlInstance=smarty-252407:europe-west1:smarty-sql&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=benchmatrix786?&useSSL=false
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/danish
spring.datasource.username=root
spring.datasource.password=benchmatrix786?
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.password=benchmatrix786123?




# for google cloud
#spring.cloud.gcp.project-id=[YOUR_GCP_PROJECT_ID_HERE]
#spring.cloud.gcp.credentials.location=file:[LOCAL_FS_CREDENTIALS_PATH]
# for google cloud


# Set the file size limit (default 1Mb). If you want to specify that files be 
# unlimited set the multipart.maxFileSize property to -1.
multipart.maxFileSize = 3Mb


multipart.maxRequestSize = 20Mb

# Keep the connection alive if idle for a long time (needed in production)
# spring.datasource.testWhileIdle = true
# spring.datasource.validationQuery = SELECT 1


# Hibernate ddl auto (create, create-drop, update, validate, none)
spring.jpa.hibernate.ddl-auto = update


# Naming strategy
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect

# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses.
spring.http.encoding.force=true


my_Api_Key = "AIzaSyCrJ7WS_yQbb_Bl9beoBA7z5JH6Y74BLU0";

#deployment port (Live/Test Server)
#server.port: 5000

#local port
server.port: 8081
#server.port: 8443
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password=123456
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat



## MULTIPART (MultipartProperties)
# Enable multipart uploads
multipart.enabled=true
# Threshold after which files are written to disk.
multipart.file-size-threshold=2KB
# Max file size.
#spring.servlet.multipart.max-file-size=200MB
# Max Request Size
#spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads


#mail properties
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.username=swift.coffee.ksa@gmail.com
spring.mail.password=bmbm@123?
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#
#for email
#spring.mail.host=smtp.gmail.com
#spring.mail.username=abcd@gmail.com
#spring.mail.password=abcd
#spring.mail.port=587
#spring.mail.properties.mail.smtp.starttls.enable=true
#for email
#


spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp
spring.mvc.static-path-pattern=/resources/**


jwt.secret="secret"